[
    {
        "type": "convention",
        "module": "example1",
        "obj": "",
        "line": 57,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example1.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "example1",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example1.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "convention",
        "module": "example1",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example1.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "example1",
        "obj": "process_data",
        "line": 47,
        "column": 4,
        "endLine": 53,
        "endColumn": 24,
        "path": "original_code/example1.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "example1",
        "obj": "process_data",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 16,
        "path": "original_code/example1.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "example2",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example2.py",
        "symbol": "bad-indentation",
        "message": "Bad indentation. Found 13 spaces, expected 12",
        "message-id": "W0311"
    },
    {
        "type": "warning",
        "module": "example2",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example2.py",
        "symbol": "bad-indentation",
        "message": "Bad indentation. Found 13 spaces, expected 12",
        "message-id": "W0311"
    },
    {
        "type": "convention",
        "module": "example2",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example2.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "example2",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example2.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "convention",
        "module": "example2",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "original_code/example2.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "example2",
        "obj": "calculate_area",
        "line": 7,
        "column": 8,
        "endLine": 13,
        "endColumn": 20,
        "path": "original_code/example2.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "example2",
        "obj": "calculate_area",
        "line": 9,
        "column": 12,
        "endLine": 9,
        "endColumn": 17,
        "path": "original_code/example2.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Width\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "example2",
        "obj": "calculate_area",
        "line": 16,
        "column": 8,
        "endLine": 20,
        "endColumn": 20,
        "path": "original_code/example2.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "example2",
        "obj": "calculate_area",
        "line": 17,
        "column": 13,
        "endLine": 17,
        "endColumn": 19,
        "path": "original_code/example2.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Radius\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "example2",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": 36,
        "endColumn": 5,
        "path": "original_code/example2.py",
        "symbol": "invalid-name",
        "message": "Constant name \"count\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "example2",
        "obj": "increment_counter",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 21,
        "path": "original_code/example2.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "example2",
        "obj": "increment_counter",
        "line": 39,
        "column": 4,
        "endLine": 39,
        "endColumn": 16,
        "path": "original_code/example2.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    }
]
